module.exports = function(grunt)
{

	'use strict';
	var stylus = require('stylus');
	var nib = require('nib');
	var fluidity = require('fluidity');
	var fileHeader = '/* Generated using Stylus. DO NOT edit this file directly or your changes may be overwritten */';

	grunt.registerMultiTask('stylus', 'compile stylus to css', function()
	{
		console.log('Running stylus');
		var done = this.async();
		var files = this.filesSrc;
		var options = this.options();

		if (typeof(options.compress) === 'undefined') {
			options.compress = true;
		}
		if (typeof(options.urlfunc) === 'undefined') {
			options.urlfunc = 'embedurl';
		}
		if (typeof(options.embedLimit) === 'undefined') {
			options.embedLimit = 30000;
		}
		fileHeader = options.fileHeader || fileHeader;

		var length = files.length;
		console.log('stylus ' + files.length + ' files');
		files.forEach(function(file)
		{
			if (/\.styl$/.test(file)) {
				var newFile = file.substr(0, file.length -5) + '.css';
				var data = grunt.file.read(file);

				var stylusFunc = stylus(data);

				stylusFunc.set('compress', options.compress).set('filename', newFile).use(nib()).use(fluidity()).define(options.urlfunc, stylus.url({limit: options.embedLimit})).import('nib');
				stylusFunc.render(function(err, css) {
					if (err) {
						console.error(err);
						done(false);
					}
					else {
						grunt.file.write(newFile, fileHeader + '\n' + css);
						length -= 1;
						if (!length) {
							done();
						}
					}
				});
			}
			else {
				length -= 1;
				if (!length) {
					done();
				}
			}
		});
	});
};